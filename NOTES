allele="abcZ bglA cat dapE dat ldh lhkA"
# get databases
(for i in $allele; do wget 'http://www.pasteur.fr/cgi-bin/genopole/PF8/mlstdbnet.pl?page=alleles&format=FASTA&locus='$i'&file=Lmono_profiles.xml' -O $i.fasta; legacy_blast.pl formatdb -i $i -p F; done;)

# Make blasts for MLST and fork each blast.
# Write protect the output files so that blast fails if it runs again on them and doesn't waste time.
( for asm in assemblies/*.fasta; do   
  asm=`basename $asm .fasta`;   
  (     
    echo $asm;     
    for i in $allele; do       
      legacy_blast.pl blastall -p blastn -F F -d db/$i.fasta -i assemblies/$asm.fasta -m 8 -a 12 2>blast/"$asm"_"$i".blast.err 1>blast/"$asm"_"$i".blast.out && chmod 444 blast/"$asm"_"$i".blast.err blast/"$asm"_"$i".blast.out &   
    done; 
    echo $asm 1>&2   
  ); 
done )

# make MLST profile table
( for asm in assemblies/*.fasta; do     
  asm=`basename $asm .fasta`;     
  (
    echo $asm;       
    for i in $allele; do
      legacy_blast.pl blastall -p blastn -F F -d db/$i.fasta -i assemblies/$asm.fasta -m 8 -a 12 | sort -k 12 -nr | head -1;       
    done; 
  ) | cut -f 2 | xargs echo; done ) | column -t # print it out to a pretty table

# export assemblies in a run directory, after having run CGP assembly
(for i in *; do run_pipeline_manage.pl $i -q; if [ $? -eq 0 ]; then continue; fi; run_pipeline_manage.pl $i -e > $i.assembly.fasta; echo $i; done;)
